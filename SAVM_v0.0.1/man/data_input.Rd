% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_input.R
\name{read_sav}
\alias{read_sav}
\alias{read_sav_csv}
\alias{read_sav_pts}
\alias{read_sav_aoi}
\title{Read SAV data from different formats}
\usage{
read_sav(
  file_path,
  spacing = 500,
  layer = NULL,
  crs = 32617,
  crs_input = 4326,
  export = NULL
)

read_sav_csv(file_path, crs = 32617, crs_input = 4326, ...)

read_sav_pts(file_path, crs = 32617)

read_sav_aoi(file_path, spacing = 500, crs = 32617)
}
\arguments{
\item{file_path}{{\code{character}}\cr{} Path to the spatial polygon file.}

\item{spacing}{{\code{numeric}}\cr{} Distance between points in meters.}

\item{layer}{{\code{character}}\cr{} Layer name for multi-layer spatial files (default: NULL).}

\item{crs}{{\code{object}}\cr{} Coordinate reference system (CRS)
of the output data (see \code{\link[sf:st_crs]{sf::st_crs()}}). Default is 32617.}

\item{crs_input}{{\code{numeric}}\cr{} Coordinate Reference System (CRS) of the input data, used for CSV import. Default is 4326.}

\item{export}{{\code{character}}\cr{} Optional. Folder path to export outputs as .gpkg.}

\item{...}{Further arguments passed on to \code{\link[utils:read.table]{utils::read.csv()}}.}
}
\value{
A list with \code{points} (sf object) and \code{polygon} (sf object).

An sf object with required and optional columns.

{\code{sf}}\cr{} An sf object with required and optional columns.

A list with the original polygon and a grid of points.
}
\description{
Read SAV data from different formats

Read a CSV file and convert to sf object

Read a spatial points file and convert to sf object

Read a spatial polygon file and generate a grid of points
}
\examples{
# Example usage with CSV file
library(sf)
temp_csv <- tempfile(fileext = ".csv")
write.csv(data.frame(
    longitude = c(-82.5, -83.0, -84.8),
    latitude = c(42.5, 42.8, 42.6),
    depth_m = c(5, 10, 7),
    fetch_km = c(2.5, 3.0, 2.8),
    secchi = c(1.2, 2.3, 1.8),
    substrate = c(TRUE, FALSE, TRUE)
), temp_csv, row.names = FALSE)

tmp <- read_sav(temp_csv, crs = 32617, crs_input = 4326)
head(tmp$points)
plot(st_geometry(tmp$polygon))
plot(st_geometry(tmp$points), add = TRUE)

# Example usage with spatial polygon file (AOI)
temp_poly <- st_sf(
    geometry = st_sfc(st_polygon(list(
        rbind(
            c(-82.5, 42.5), c(-82.5, 42.8), c(-82.0, 42.8), c(-82.0, 42.5), c(-82.5, 42.5)
        )
    )), crs = 4326)
)
temp_file <- tempfile(fileext = ".gpkg")
st_write(temp_poly, temp_file, quiet = TRUE)

tmp <- read_sav(temp_file, spacing = 500, crs = 32617)
head(tmp$points)
plot(st_geometry(tmp$polygon))
plot(st_geometry(tmp$points), add = TRUE)

# Example CSV file creation
temp_csv <- tempfile(fileext = ".csv")
write.csv(data.frame(
    longitude = c(-82.5, -83.0, -83.2),
    latitude = c(42.5, 42.8, 42.6),
    depth_m = c(5, 10, 7),
    fetch_km = c(2.5, 3.0, 2.8),
    secchi = c(1.2, 2.3, 1.8),
    substrate = c(TRUE, FALSE, TRUE),
    limitation = c(FALSE, FALSE, TRUE)
), temp_csv, row.names = FALSE)

# Read the CSV and convert to sf
read_sav_csv(temp_csv, crs = 32614, crs_input = 4326)
# Example spatial points file creation (requires sf package)
library(sf)
temp_sf <- st_sf(
    longitude = c(-82.5, -83.0),
    latitude = c(42.5, 42.8),
    depth_m = c(5, 10),
    geometry = st_sfc(
        st_point(c(-82.5, 42.5)),
        st_point(c(-83.0, 42.8))
    ),
    crs = 4326
)

temp_file <- tempfile(fileext = ".gpkg")
st_write(temp_sf, temp_file, quiet = TRUE)

# Read the spatial file and convert to sf
read_sav_pts(temp_file)

# Example spatial polygon file creation (requires sf package)
library(sf)
temp_poly <- st_sf(
    geometry = st_sfc(st_polygon(list(
        rbind(
            c(-82.5, 42.5), c(-82.5, 42.8), c(-82.0, 42.8), c(-82.0, 42.5), c(-82.5, 42.5)
        )
    )), crs = 4326)
)
temp_file <- tempfile(fileext = ".gpkg")
st_write(temp_poly, temp_file, quiet = TRUE)

# Read the spatial polygon file and generate a grid
read_sav_aoi(temp_file, spacing = 500)
}
